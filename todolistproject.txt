>>> from day.models import activity
>>> activity.objects.all()
<QuerySet []>
>>> a=activity(order=1,task='Meditation',day=3,month=8,year=2023)
>>> a.save()
>>> activity.objects.all()
<QuerySet [<activity: Meditation>]>




<form action="{% url 'add' %}" method="post">
            {% csrf_token %}
            <tr>
                <th>order</th>
                <th colspan="2"><input type="text"> </th>
                <th colspan="4"><button> Add Task </button></th>
            </tr>
            </form>
          
{% set len=len+1 %}


URL#####################################################

from django.urls import path
from . import views


urlpatterns=[
    path('day/<str:dt>',views.day,name='day'),
    path('',views.dayd,name='dayd'),
    path('staticpage',views.staticpage,name='staticpage'),
    path('add',views.add,name='addpage'),
    path('day/add/<str:d>',views.dayadd,name='dayadd'),
]

View######################################################

from django.shortcuts import render,redirect
from django.http import HttpResponse,HttpResponseRedirect,HttpResponseNotFound
from django.urls import reverse
from .models import activity
from .forms import addtaskform


def month(request,m,y):
    def leap(y):
        if y%4==0:
            if y%100==0:
                if y%400==0:
                    return 29
                else:
                    return 28
            else:
                return 29
        else:
            return 28
    year=int(y)
    days=0
    month=['january','february','march','april','may','june','july','august','september','october','november','december']
    mnum={month[i]:i+1 for i in range(12)}
    monthday={('january','march','may','july','august','october','december'):31,
            ('april','june','september','november'):30,
            ('february'):28}
    mn=mnum[m.lower()]

    if month=='february':
        monthday[('february')]=leap(year)

    for i in monthday:
        if month in i:
            days=monthday[i]
    
    taskm=activity.objects.filter(year=year, month=mn)
    msumm={}
    for i in range(1,days+1):
        ttd=activity.objects.filter(year=year, month=mn,day=i)
        ttdd=activity.objects.filter(year=year, month=mn,day=i,status=True)
        msumm[i]=[len(ttd),len(ttdd)]
    
    return render(request, 'month.html',{'msum':msumm})

def staticpage(request):
    return render(request, 'staticpage.html')

def dayd(request):
    form=addtaskform()
    from datetime import datetime
    dt=datetime.now().date()
    y=dt.year
    m=dt.month
    d=dt.day
    dtask=activity.objects.filter(year=y,month=m,day=d)
    nl=dtask.count()+1
    return render(request,'day.html', {'day_task':dtask,'date':dt,'nlen':nl,'form':form})

def day(request,dt):
    form=addtaskform()
    from datetime import datetime
    
    if dt=='':
        dt=datetime.now().date()
    else:
        dt=datetime.strptime(dt,'%Y-%m-%d').date()
    y=dt.year
    m=dt.month
    da=dt.day

    dtask=activity.objects.filter(year=y,month=m,day=da)
    nl=dtask.count()+1
    return render(request,'day.html', {'day_task':dtask,'date':dt,'nlen':nl,'form':form})

def add(request):
    if request.method=='POST':
        form =addtaskform(request.POST)
        #print(form.cleaned_data)
        if form.is_valid():
            fd=form.cleaned_data
            from datetime import datetime
            dt=datetime.now().date()
            y=dt.year
            m=dt.month
            d=dt.day

            a=activity(order=404,task=fd['activity'],year=2023,month=11,day=11)
            a.save()

            from datetime import datetime
    
            dt='2023-11-10'
            #dt=datetime.strptime(dt,'%Y-%m-%d').date()
            
            dtask=activity.objects.filter(year=2023,month=11,day=11)
            nl=dtask.count()+1
            return HttpResponseRedirect(reverse('day',args=[dt]))
        else:
            form=addtaskform()
            return render(request,'add.html',{'form':form})

    else:
        from datetime import datetime
        dt=datetime.now().date()
        form=addtaskform()
    return render(request,'add.html',{'form':form})


def dayadd(request,d):
    from datetime import datetime
    dt=datetime.strptime(d,'%Y-%m-%d').date()
    y=dt.year
    m=dt.month
    da=dt.day
    dtask=activity.objects.filter(year=y,month=m,day=da)
    nl=dtask.count()+1
    if request.method=='POST':
        form =addtaskform(request.POST)
        if form.is_valid():
            fd=form.cleaned_data
            a=activity(order=nl,task=fd['activity'],year=y,month=m,day=da)
            a.save()
        return HttpResponseRedirect(reverse('dayadd',args=[d]))
    #dtask=activity.objects.filter(year=y,month=m,day=da)       
    form1=addtaskform()
    return render(request,'dayadd.html', {'day_task':dtask,'form':form1})


